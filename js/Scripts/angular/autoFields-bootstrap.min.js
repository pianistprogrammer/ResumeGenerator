/**
 * @license Autofields v2.1.6
 * (c) 2014 Justin Maier http://justmaier.github.io/angular-autoFields-bootstrap
 * License: MIT
 */
angular.module("autofields.bootstrap",["autofields.standard","ui.bootstrap"]).config(["$autofieldsProvider",function(n){n.settings.classes.container.push("form-group");n.settings.classes.input.push("form-control");n.settings.classes.label.push("control-label");n.registerHandler("checkbox",function(t,i){var r=n.field(t,i,"<input/>");return r.label&&r.label.prepend(r.input),r.input.removeClass("form-control"),r.fieldContainer});n.settings.dateSettings={showWeeks:!1,datepickerPopup:"MMMM dd, yyyy"};n.settings.scope.datepickerOptions={showWeeks:!1};n.settings.scope.openCalendar=function(n,t,i){i.preventDefault();i.stopPropagation();n[t]=!n[t]};n.registerHandler("date",function(t,i){var u=i.showWeeks?i.showWeeks:t.options.dateSettings.showWeeks,f=i.datepickerPopup?i.datepickerPopup:t.options.dateSettings.datepickerPopup,e={type:"text",showWeeks:u,datepickerPopup:f,datepickerOptions:"datepickerOptions",isOpen:"$property_cleanOpen"},r;return i.attr&&i.attr.disabled==!0||(i.$addons=[{button:!0,icon:"glyphicon glyphicon-calendar",attr:{ngClick:'openCalendar("$property_cleanOpen",$event)'}}]),r=n.field(t,i,"<input/>",e),r.fieldContainer});n.registerHandler("static",function(t,i){var f=i.showWeeks?i.showWeeks:t.options.dateSettings.showWeeks,e=i.datepickerPopup?i.datepickerPopup:t.options.dateSettings.datepickerPopup,r=n.field(t,i,"<p/>"),u=angular.element("<p/>");return u.attr("ng-bind",r.input.attr("ng-model")),u.addClass("form-control-static"),r.input.replaceWith(u),r.fieldContainer});n.settings.classes.row=n.settings.classes.row||[];n.settings.classes.row.push("row");n.settings.classes.col=n.settings.classes.col||[];n.settings.classes.col.push("col-sm-$size");n.settings.classes.colOffset=n.settings.classes.colOffset||[];n.settings.classes.colOffset.push("col-sm-offset-$size");n.registerHandler("multiple",function(t,i){var r=angular.element("<div/>");return r.addClass(t.options.classes.row.join(" ")),angular.forEach(i.fields,function(u,f){var e=angular.element("<div/>"),o=u.type!="multiple"?u.columns||i.columns:i.columns;e.addClass(t.options.classes.col.join(" ").replace(/\$size/g,o));e.append(n.createField(t,u,f));r.append(e)}),r});n.settings.classes.helpBlock=n.settings.classes.helpBlock||[];n.settings.classes.helpBlock.push("help-block");n.registerMutator("helpBlock",function(n,t,i){return t.help?(i.helpBlock=angular.element("<p/>"),i.helpBlock.addClass(n.options.classes.helpBlock.join(" ")),i.helpBlock.html(t.help),i.fieldContainer.append(i.helpBlock),i):i});n.settings.classes.inputGroup=["input-group"];n.settings.classes.inputGroupAddon=["input-group-addon"];n.settings.classes.inputGroupAddonButton=["input-group-btn"];n.settings.classes.button=["btn","btn-default"];n.registerMutator("addons",function(t,i,r){if(!(i.$addons||i.addons))return r;r.inputGroup=angular.element("<div/>");r.inputGroup.addClass(n.settings.classes.inputGroup.join(" "));var u=[];return angular.forEach(i.$addons||i.addons,function(f){var e=angular.element("<span/>"),o=null,s;e.addClass(n.settings.classes.inputGroupAddon.join(" "));f.button&&(e.attr("class",n.settings.classes.inputGroupAddonButton.join(" ")),o=angular.element('<button type="button"/>'),o.addClass(n.settings.classes.button.join(" ")),e.append(o));f.icon!=null&&(s=angular.element("<i/>"),s.addClass(f.icon),(o||e).append(s));f.content!=null&&(o||e).html(f.content);f.attr&&n.setAttributes(t,i,o||e,f.attr);f.before?r.inputGroup.append(e):u.push(e)}),r.inputGroup.append(r.input),angular.forEach(u,function(n){r.inputGroup.append(n)}),r.fieldContainer.append(r.inputGroup),r});n.settings.layout={type:"basic",labelSize:2,inputSize:10};n.registerMutator("horizontalForm",function(t,i,r){var u,f;if(!(t.options.layout&&t.options.layout.type=="horizontal"))return t.container.removeClass("form-horizontal"),r;var e=n.settings.classes.col[0],s=n.settings.classes.colOffset[0],o=i.labelSize?i.labelSize:t.options.layout.labelSize,h=i.inputSize?i.inputSize:t.options.layout.inputSize;return t.container.addClass("form-horizontal"),u=angular.element("<div/>"),u.addClass(e.replace(/\$size/gi,h)),r.label&&i.type!="checkbox"?(r.label.addClass(e.replace(/\$size/gi,o)),r.label.after(u)):(r.fieldContainer.prepend(u),u.addClass(s.replace(/\$size/g,o))),i.type=="checkbox"?(r.fieldContainer.removeClass("checkbox"),f=angular.element("<div/>"),f.addClass("checkbox"),f.append(r.label),u.append(f)):u.append(r.inputGroup||r.input),i.help&&u.append(r.helpBlock),r},{require:"helpBlock"})}]);angular.module("autofields.bootstrap.validation",["autofields.validation"]).config(["$tooltipProvider",function(n){n.setTriggers({"keyup focus":"blur"});n.options({placement:"top",animation:!1})}]).config(["$autofieldsProvider",function(n){n.settings.attributes.container.ngClass="{'has-error':"+n.settings.validation.invalid+", 'has-success':"+n.settings.validation.valid+"}";n.settings.attributes.input.popover="{{("+n.settings.validation.valid+") ? '$validMsg' : ($errorMsgs)}}";n.settings.noPopover=["date"];n.registerMutator("bootstrap-validation",function(t,i,r){if(!r.validation||n.settings.noPopover.indexOf(i.type)!=-1)return r.input.removeAttr("popover"),r;if(r.msgs.length){var u=r.input.attr("popover").replace(/\$validMsg/gi,r.validMsg).replace(/\$errorMsgs/gi,r.msgs.join("+"));r.input.attr({"popover-trigger":"keyup focus",popover:u})}else r.input.removeAttr("popover");return r},{require:"validation",override:!0})}]);angular.module("autofields",["autofields.bootstrap","autofields.bootstrap.validation"]);
//# sourceMappingURL=autoFields-bootstrap.min.js.map
